const keyMappingEN = {

  'key_tilda' : { isFn: false, isLock: false, eventKey: 'Dead', eventCode: 'Backquote', char: '\`', charShift : '\~' },
  'key_1' : { isFn: false, isLock: false, eventCode: 'Digit1', char: '1', charShift : '!' },
  'key_2' : { isFn: false, isLock: false, eventCode: 'Digit2', char: '2', charShift : '@' },
  'key_3' : { isFn: false, isLock: false, eventCode: 'Digit3', char: '3', charShift : '#' },
  'key_4' : { isFn: false, isLock: false, eventCode: 'Digit4', char: '4', charShift : '$' },
  'key_5' : { isFn: false, isLock: false, eventCode: 'Digit5', char: '5', charShift : '%' },
  'key_6' : { isFn: false, isLock: false, eventCode: 'Digit6', char: '6', charShift : '^' },
  'key_7' : { isFn: false, isLock: false, eventCode: 'Digit7', char: '7', charShift : '&' },
  'key_8' : { isFn: false, isLock: false, eventCode: 'Digit8', char: '8', charShift : '*' },
  'key_9' : { isFn: false, isLock: false, eventCode: 'Digit9', char: '9', charShift : '(' },
  'key_0' : { isFn: false, isLock: false, eventCode: 'Digit0', char: '0', charShift : ')' },
  'key_minus' : { isFn: false, isLock: false, eventCode: 'Minus', char: '-', charShift : '_' },
  'key_equal' : { isFn: false, isLock: false, eventCode: 'Equal', char: '=', charShift : '+' },
  'key_backspace' : { isFn: true, isLock: false, eventCode: 'Backspace', eventType : 'removePrev', char: 'Backspace' },

  'key_tab' : { isFn: false, isLock: false, eventCode: 'Tab', char: '    ', charShift : '    ' },
  'key_q' : { isFn: false, isLock: false, eventCode: 'KeyQ', char: 'q', charShift : 'Q' },
  'key_w' : { isFn: false, isLock: false, eventCode: 'KeyW', char: 'w', charShift : 'W' },
  'key_e' : { isFn: false, isLock: false, eventCode: 'KeyE', char: 'e', charShift : 'E' },
  'key_r' : { isFn: false, isLock: false, eventCode: 'KeyR', char: 'r', charShift : 'R' },
  'key_t' : { isFn: false, isLock: false, eventCode: 'KeyT', char: 't', charShift : 'T' },
  'key_y' : { isFn: false, isLock: false, eventCode: 'KeyY', char: 'y', charShift : 'Y' },
  'key_u' : { isFn: false, isLock: false, eventCode: 'KeyU', char: 'u', charShift : 'U' },
  'key_i' : { isFn: false, isLock: false, eventCode: 'KeyI', char: 'i', charShift : 'I' },
  'key_o' : { isFn: false, isLock: false, eventCode: 'KeyO', char: 'o', charShift : 'O' },
  'key_p' : { isFn: false, isLock: false, eventCode: 'KeyP', char: 'p', charShift : 'P' },
  'key_bracket_left' : { isFn: false, isLock: false, eventCode: 'BracketLeft', char: '[', charShift : '{' },
  'key_bracket_right' : { isFn: false, isLock: false, eventCode: 'BracketRight', char: ']', charShift : '}' },
  'key_delete' : { isFn: true, isLock: false, eventCode: 'Delete', eventType: 'removeNext', char: 'DEL' },

  'key_capslock' : { isFn: true, isLock: true, eventCode: 'CapsLock', eventType: 'toggleCaps' },
  'key_a' : { isFn: false, isLock: false, eventCode: 'KeyA', char: 'a', charShift : 'A' },
  'key_s' : { isFn: false, isLock: false, eventCode: 'KeyS', char: 's', charShift : 'S' },
  'key_d' : { isFn: false, isLock: false, eventCode: 'KeyD', char: 'd', charShift : 'D' },
  'key_f' : { isFn: false, isLock: false, eventCode: 'KeyF', char: 'f', charShift : 'F' },
  'key_g' : { isFn: false, isLock: false, eventCode: 'KeyG', char: 'g', charShift : 'G' },
  'key_h' : { isFn: false, isLock: false, eventCode: 'KeyH', char: 'h', charShift : 'H' },
  'key_j' : { isFn: false, isLock: false, eventCode: 'KeyJ', char: 'j', charShift : 'J' },
  'key_k' : { isFn: false, isLock: false, eventCode: 'KeyK', char: 'k', charShift : 'K' },
  'key_l' : { isFn: false, isLock: false, eventCode: 'KeyL', char: 'l', charShift : 'L' },
  'key_doubledot' : { isFn: false, isLock: false, eventCode: 'Semicolon', char: ';', charShift : ';' },
  'key_quote' : { isFn: false, isLock: false, eventCode: 'Quote', char: '\'', charShift : '\"' },
  'key_enter' : { isFn: true, isLock: false, eventCode: 'Enter', eventType: 'newLine', char: 'Enter' },

  'key_shift_left' : { isFn: true, isLock: true, eventCode: 'ShiftLeft', eventType: 'toggleShift', char: 'L. Shift' },
  'key_backslash' : { isFn: false, isLock: false, eventCode: 'Backslash', char: '\\', charShift : '|' },
  'key_z' : { isFn: false, isLock: false, eventCode: 'KeyZ', char: 'z', charShift : 'Z' },
  'key_x' : { isFn: false, isLock: false, eventCode: 'KeyX', char: 'x', charShift : 'X' },
  'key_c' : { isFn: false, isLock: false, eventCode: 'KeyC', char: 'c', charShift : 'C' },
  'key_v' : { isFn: false, isLock: false, eventCode: 'KeyV', char: 'v', charShift : 'V' },
  'key_b' : { isFn: false, isLock: false, eventCode: 'KeyB', char: 'b', charShift : 'B' },
  'key_n' : { isFn: false, isLock: false, eventCode: 'KeyN', char: 'n', charShift : 'N' },
  'key_m' : { isFn: false, isLock: false, eventCode: 'KeyM', char: 'm', charShift : 'M' },
  'key_comma' : { isFn: false, isLock: false, eventCode: 'Comma', char: ',', charShift : '<' },
  'key_dot' : { isFn: false, isLock: false, eventCode: 'Period', char: '.', charShift : '>' },
  'key_slash' : { isFn: false, isLock: false, eventCode: 'Slash', char: '/', charShift : '?' },
  'key_up' : { isFn: true, isLock: false, eventCode: 'ArrowUp', eventType: 'moveUp' , char: '▲' },
  'key_shift_right' : { isFn: true, isLock: true, eventCode: 'ShiftRight', eventType: 'toggleShift', char: 'R. Shift' },

  'key_ctrl_left' : { isFn: true, isLock: true, eventCode: 'ControlLeft', eventType: 'toggleControl', char: 'L. Ctrl' },
  'key_win_left' : { isFn: true, isLock: false, eventCode: 'MetaLeft ', eventType: 'toggleWin', char: 'L. WIN' },
  'key_alt_left' : { isFn: true, isLock: true, eventCode: 'AltLeft', eventType: 'toggleAlt', char: 'L. Alt' },
  'key_space' : { isFn: false, isLock: false, eventCode: 'Space', eventType: 'moveUp' , char: ' ', charShift : ' ' },
  'key_alt_right' : { isFn: true, isLock: true, eventCode: 'AltRight', eventType: 'toggleAlt', char: 'R. Alt' },
  'key_win_left' : { isFn: true, isLock: false, eventCode: 'MetaRight ', eventType: 'toggleWin', char: 'R. WIN' },
  'key_left' : { isFn: true, isLock: false, eventCode: 'ArrowLeft', eventType: 'movePrev' , char: '◄' },
  'key_down' : { isFn: true, isLock: false, eventCode: 'ArrowDown', eventType: 'moveDown' , char: '▼' },
  'key_left' : { isFn: true, isLock: false, eventCode: 'ArrowRight', eventType: 'moveNext' , char: '►' },
  'key_ctrl_right' : { isFn: true, isLock: true, eventCode: 'ControlRight', eventType: 'toggleControl', char: 'R. Ctrl' } ,

};

const keyMappingRu = {

  'key_tilda' : { isFn: false, isLock: false, eventKey: 'Dead', eventCode: 'Backquote', char: 'ё', charShift : 'Ё' },
  'key_1' : { isFn: false, isLock: false, eventCode: 'Digit1', char: '1', charShift : '!' },
  'key_2' : { isFn: false, isLock: false, eventCode: 'Digit2', char: '2', charShift : '\"' },
  'key_3' : { isFn: false, isLock: false, eventCode: 'Digit3', char: '3', charShift : '№' },
  'key_4' : { isFn: false, isLock: false, eventCode: 'Digit4', char: '4', charShift : ';' },
  'key_5' : { isFn: false, isLock: false, eventCode: 'Digit5', char: '5', charShift : '%' },
  'key_6' : { isFn: false, isLock: false, eventCode: 'Digit6', char: '6', charShift : ':' },
  'key_7' : { isFn: false, isLock: false, eventCode: 'Digit7', char: '7', charShift : '?' },
  'key_8' : { isFn: false, isLock: false, eventCode: 'Digit8', char: '8', charShift : '*' },
  'key_9' : { isFn: false, isLock: false, eventCode: 'Digit9', char: '9', charShift : '(' },
  'key_0' : { isFn: false, isLock: false, eventCode: 'Digit0', char: '0', charShift : ')' },
  'key_minus' : { isFn: false, isLock: false, eventCode: 'Minus', char: '-', charShift : '_' },
  'key_equal' : { isFn: false, isLock: false, eventCode: 'Equal', char: '=', charShift : '+' },
  'key_backspace' : { isFn: true, isLock: false, eventCode: 'Backspace', eventType : 'removePrev', char: 'Backspace' },


  'key_tab' : { isFn: false, isLock: false, eventCode: 'Tab', char: '    ', charShift : '    ' },
  'key_q' : { isFn: false, isLock: false, eventCode: 'KeyQ', char: 'й', charShift : 'Й' },
  'key_w' : { isFn: false, isLock: false, eventCode: 'KeyW', char: 'ц', charShift : 'Ц' },
  'key_e' : { isFn: false, isLock: false, eventCode: 'KeyE', char: 'у', charShift : 'У' },
  'key_r' : { isFn: false, isLock: false, eventCode: 'KeyR', char: 'к', charShift : 'К' },
  'key_t' : { isFn: false, isLock: false, eventCode: 'KeyT', char: 'е', charShift : 'Е' },
  'key_y' : { isFn: false, isLock: false, eventCode: 'KeyY', char: 'н', charShift : 'Н' },
  'key_u' : { isFn: false, isLock: false, eventCode: 'KeyU', char: 'г', charShift : 'Г' },
  'key_i' : { isFn: false, isLock: false, eventCode: 'KeyI', char: 'ш', charShift : 'Ш' },
  'key_o' : { isFn: false, isLock: false, eventCode: 'KeyO', char: 'щ', charShift : 'Щ' },
  'key_p' : { isFn: false, isLock: false, eventCode: 'KeyP', char: 'з', charShift : 'З' },
  'key_bracket_left' : { isFn: false, isLock: false, eventCode: 'BracketLeft', char: 'х', charShift : 'Х' },
  'key_bracket_right' : { isFn: false, isLock: false, eventCode: 'BracketLeft', char: 'ъ', charShift : 'Ъ' },
  'key_delete' : { isFn: true, isLock: false, eventCode: 'Delete', eventType: 'removeNext', char: 'DEL' },


  'key_capslock' : { isFn: true, isLock: true, eventCode: 'CapsLock', eventType: 'toggleCaps' },
  'key_a' : { isFn: false, isLock: false, eventCode: 'KeyA', char: 'ф', charShift : 'Ф' },
  'key_s' : { isFn: false, isLock: false, eventCode: 'KeyS', char: 'ы', charShift : 'Ы' },
  'key_d' : { isFn: false, isLock: false, eventCode: 'KeyD', char: 'в', charShift : 'В' },
  'key_f' : { isFn: false, isLock: false, eventCode: 'KeyF', char: 'а', charShift : 'А' },
  'key_g' : { isFn: false, isLock: false, eventCode: 'KeyG', char: 'п', charShift : 'П' },
  'key_h' : { isFn: false, isLock: false, eventCode: 'KeyH', char: 'р', charShift : 'Р' },
  'key_j' : { isFn: false, isLock: false, eventCode: 'KeyJ', char: 'о', charShift : 'О' },
  'key_k' : { isFn: false, isLock: false, eventCode: 'KeyK', char: 'л', charShift : 'Л' },
  'key_l' : { isFn: false, isLock: false, eventCode: 'KeyL', char: 'д', charShift : 'Д' },
  'key_doubledot' : { isFn: false, isLock: false, eventCode: 'Semicolon', char: 'ж', charShift : 'Ж' },
  'key_quote' : { isFn: false, isLock: false, eventCode: 'Quote', char: 'э', charShift : 'Э' },
  'key_enter' : { isFn: true, isLock: false, eventCode: 'Enter', eventType: 'newLine', char: 'Enter' },



  'key_shift_left' : { isFn: true, isLock: true, eventCode: 'ShiftLeft', eventType: 'toggleShift', char: 'L. Shift' },
  'key_backslash' : { isFn: false, isLock: false, eventCode: 'Backslash', char: '\\', charShift : '\/' },
  'key_z' : { isFn: false, isLock: false, eventCode: 'KeyZ', char: 'я', charShift : 'Я' },
  'key_x' : { isFn: false, isLock: false, eventCode: 'KeyX', char: 'ч', charShift : 'Ч' },
  'key_c' : { isFn: false, isLock: false, eventCode: 'KeyC', char: 'с', charShift : 'С' },
  'key_v' : { isFn: false, isLock: false, eventCode: 'KeyV', char: 'м', charShift : 'М' },
  'key_b' : { isFn: false, isLock: false, eventCode: 'KeyB', char: 'и', charShift : 'И' },
  'key_n' : { isFn: false, isLock: false, eventCode: 'KeyN', char: 'т', charShift : 'Т' },
  'key_m' : { isFn: false, isLock: false, eventCode: 'KeyM', char: 'ь', charShift : 'Ь' },
  'key_comma' : { isFn: false, isLock: false, eventCode: 'Comma', char: 'б', charShift : 'Б' },
  'key_dot' : { isFn: false, isLock: false, eventCode: 'Period', char: 'ю', charShift : 'Ю' },
  'key_slash' : { isFn: false, isLock: false, eventCode: 'Slash', char: '.', charShift : ',' },
  'key_up' : { isFn: true, isLock: false, eventCode: 'ArrowUp', eventType: 'moveUp' , char: '▲' },
  'key_shift_right' : { isFn: true, isLock: true, eventCode: 'ShiftRight', eventType: 'toggleShift', char: 'R. Shift' },



  'key_ctrl_left' : { isFn: true, isLock: true, eventCode: 'ControlLeft', eventType: 'toggleControl', char: 'L. Ctrl' },
  'key_win_left' : { isFn: true, isLock: false, eventCode: 'MetaLeft ', eventType: 'toggleWin', char: 'L. WIN' },
  'key_alt_left' : { isFn: true, isLock: true, eventCode: 'AltLeft', eventType: 'toggleAlt', char: 'L. Alt' },
  'key_space' : { isFn: false, isLock: false, eventCode: 'Space', eventType: 'moveUp' , char: ' ', charShift : ' ' },
  'key_alt_right' : { isFn: true, isLock: true, eventCode: 'AltRight', eventType: 'toggleAlt', char: 'R. Alt' },
  'key_win_left' : { isFn: true, isLock: false, eventCode: 'MetaRight ', eventType: 'toggleWin', char: 'R. WIN' },
  'key_left' : { isFn: true, isLock: false, eventCode: 'ArrowLeft', eventType: 'movePrev' , char: '◄' },
  'key_down' : { isFn: true, isLock: false, eventCode: 'ArrowDown', eventType: 'moveDown' , char: '▼' },
  'key_left' : { isFn: true, isLock: false, eventCode: 'ArrowRight', eventType: 'moveNext' , char: '►' },
  'key_ctrl_right' : { isFn: true, isLock: true, eventCode: 'ControlRight', eventType: 'toggleControl', char: 'R. Ctrl' } ,

};



module.exports.keyMappingEN = keyMappingEN;
module.exports.keyMappingRU = keyMappingRU;
